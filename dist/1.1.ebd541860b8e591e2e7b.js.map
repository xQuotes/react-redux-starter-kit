{"version":3,"sources":["webpack:///./src/route/register/index.js"],"names":["createForm","create","FormItem","Item","Register","props","e","preventDefault","form","resetFields","userStore","validateFields","errors","values","console","log","registerServer","rePassword","rule","value","callback","setTimeout","Error","force","getFieldValue","getFieldDecorator","getFieldError","isFieldValidating","formItemLayout","labelCol","span","wrapperCol","join","rules","required","min","message","validator","userExists","validate","trigger","type","whitespace","checkPass","checkPass2","offset","handleSubmit","handleReset","React","Component"],"mappings":"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","file":"1.1.ebd541860b8e591e2e7b.js","sourcesContent":["import {\n  inject, observer\n} from 'mobx-react'\nimport {\n  Button, Form, Input\n} from 'antd'\nconst createForm = Form.create\nconst FormItem = Form.Item\n\n// import './register.less'\n\n@createForm()\n@inject(\"userStore\") @observer\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  handleReset(e) {\n    e.preventDefault()\n    this.props.form.resetFields()\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { userStore } = this.props\n\n    this.props.form.validateFields((errors, values) => {\n      if (errors) {\n        console.log('Errors in form!!!')\n        return;\n      }\n      console.log('Submit!!!')\n      console.log(userStore.registerServer)\n      console.log(values)\n      delete values[rePassword]\n      console.log(userStore.registerServer(values))\n      console.log(this.props)\n    });\n  }\n\n  userExists(rule, value, callback) {\n    if (!value) {\n      callback();\n    } else {\n      setTimeout(() => {\n        if (value === 'Jason Wood') {\n          callback([new Error('Sorry, the user name is already in use.')]);\n        } else {\n          callback();\n        }\n      }, 800);\n    }\n  }\n\n  checkPass(rule, value, callback) {\n    const { validateFields } = this.props.form;\n    if (value) {\n      validateFields(['rePassword'], { force: true });\n    }\n    callback();\n  }\n\n  checkPass2(rule, value, callback) {\n    const { getFieldValue } = this.props.form;\n    if (value && value !== getFieldValue('password')) {\n      callback('The two passwords you enter are inconsistent!');\n    } else {\n      callback();\n    }\n  }\n  render() {\n    const {\n      getFieldDecorator, getFieldError, isFieldValidating\n    } = this.props.form\n    const formItemLayout = {\n      labelCol: { span: 7 },\n      wrapperCol: { span: 12 },\n    };\n    return (<div className=\"register\">\n      <Form horizontal>\n        <FormItem\n          {...formItemLayout}\n          label=\"User name\"\n          hasFeedback\n          help={isFieldValidating('username') ? 'validating...' : (getFieldError('name') || []).join(', ')}\n        >\n          {getFieldDecorator('username', {\n            rules: [\n              { required: true, min: 5, message: 'User name for at least 5 characters' },\n              { validator: ::this.userExists },\n            ],\n          })(\n            <Input placeholder=\"Realtime validation, try to input Jason Wood\" />\n          )}\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label=\"Email\"\n          hasFeedback\n        >\n          {getFieldDecorator('email', {\n            validate: [{\n              rules: [\n                { required: true },\n              ],\n              trigger: 'onBlur',\n            }, {\n              rules: [\n                { type: 'email', message: 'Please input the correct email' },\n              ],\n              trigger: ['onBlur', 'onChange'],\n            }],\n          })(\n            <Input type=\"email\" placeholder=\"This control uses onBlur and onChange\" />\n          )}\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label=\"Password\"\n          hasFeedback\n        >\n          {getFieldDecorator('password', {\n            rules: [\n              { required: true, whitespace: true, message: 'Please enter your password' },\n              { validator: ::this.checkPass },\n            ],\n          })(\n            <Input type=\"password\" autoComplete=\"off\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label=\"Confirm password\"\n          hasFeedback\n        >\n          {getFieldDecorator('rePassword', {\n            rules: [{\n              required: true,\n              whitespace: true,\n              message: 'Please confirm your password',\n            }, {\n              validator: ::this.checkPass2,\n            }],\n          })(\n            <Input type=\"password\" autoComplete=\"off\" placeholder=\"password\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem wrapperCol={{ span: 12, offset: 7 }}>\n          <Button type=\"primary\" onClick={::this.handleSubmit}>OK</Button>\n          &nbsp;&nbsp;&nbsp;\n          <Button type=\"ghost\" onClick={::this.handleReset}>Reset</Button>\n        </FormItem>\n      </Form>\n    </div>)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/route/register/index.js"],"sourceRoot":""}