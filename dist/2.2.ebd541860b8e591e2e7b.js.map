{"version":3,"sources":["webpack:///./src/route/login/index.js"],"names":["createForm","create","FormItem","Item","Login","props","e","preventDefault","form","resetFields","userStore","validateFields","errors","values","console","log","loginServer","getFieldDecorator","getFieldError","isFieldValidating","formItemLayout","labelCol","span","wrapperCol","join","rules","required","min","message","whitespace","offset","handleSubmit","handleReset","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;;;;;;;AAGA,KAAMA,aAAa,WAAKC,MAAxB;AACA,KAAMC,WAAW,WAAKC,IAAtB;;AAEA;;KAIqBC,K,WAFpBJ,Y,UACA,uBAAO,WAAP,C;;;AAEC,kBAAYK,KAAZ,EAAmB;AAAA;;AAAA,0GACXA,KADW;AAElB;;;;iCAEWC,C,EAAG;AACbA,SAAEC,cAAF;AACA,YAAKF,KAAL,CAAWG,IAAX,CAAgBC,WAAhB;AACD;;;kCAEYH,C,EAAG;AACdA,SAAEC,cAAF;AADc,oBAEc,KAAKF,KAFnB;AAAA,WAENK,SAFM,UAENA,SAFM;AAAA,WAEKF,IAFL,UAEKA,IAFL;;;AAIdA,YAAKG,cAAL,CAAoB,UAACC,MAAD,EAASC,MAAT,EAAoB;AACtC,aAAID,MAAJ,EAAY;AACVE,mBAAQC,GAAR,CAAY,mBAAZ;AACA;AACD;AACDL,mBAAUM,WAAV,CAAsBH,MAAtB;AACD,QAND;AAOD;;;8BACQ;AAAA,yBAGH,KAAKR,KAAL,CAAWG,IAHR;AAAA,WAELS,iBAFK,eAELA,iBAFK;AAAA,WAEcC,aAFd,eAEcA,aAFd;AAAA,WAE6BC,iBAF7B,eAE6BA,iBAF7B;;AAIP,WAAMC,iBAAiB;AACrBC,mBAAU,EAAEC,MAAM,CAAR,EADW;AAErBC,qBAAY,EAAED,MAAM,EAAR;AAFS,QAAvB;AAIA,cACE;AAAA;AAAA;AACE,sBAAU,OADZ;AAEE;AAAA;AAAA,aAAM,gBAAN;AACE;AAAC,qBAAD;AAAA,0BACMF,cADN;AAEE,sBAAM,WAFR;AAGE,gCAHF;AAIE,qBAAMD,kBAAkB,UAAlB,IAAgC,eAAhC,GAAkD,CAACD,cAAc,MAAd,KAAyB,EAA1B,EAA8BM,IAA9B,CAAmC,IAAnC;AAJ1D;AAMGP,+BAAkB,UAAlB,EAA8B;AAC7BQ,sBAAO,CACL,EAAEC,UAAU,IAAZ,EAAkBC,KAAK,CAAvB,EAA0BC,SAAS,qCAAnC,EADK;AADsB,cAA9B,EAKC,mCAAO,aAAY,8CAAnB,GALD;AANH,YADF;AAgBE;AAAC,qBAAD;AAAA,0BACMR,cADN;AAEE,sBAAM,UAFR;AAGE;AAHF;AAKGH,+BAAkB,UAAlB,EAA8B;AAC7BQ,sBAAO,CACL,EAAEC,UAAU,IAAZ,EAAkBG,YAAY,IAA9B,EAAoCD,SAAS,4BAA7C,EADK;AADsB,cAA9B,EAKC,mCAAO,MAAK,UAAZ,EAAuB,cAAa;AAApC,eALD;AALH,YAhBF;AA+BE;AAAC,qBAAD;AAAA,eAAU,YAAY,EAAEN,MAAM,EAAR,EAAYQ,QAAQ,CAApB,EAAtB;AACE;AAAA;AAAA,iBAAQ,MAAK,SAAb,EAAuB,SAAW,KAAKC,YAAhB,MAAW,IAAX,CAAvB;AAAA;AAAA,cADF;AAAA;AAGE;AAAA;AAAA,iBAAQ,MAAK,OAAb,EAAqB,SAAW,KAAKC,WAAhB,MAAW,IAAX,CAArB;AAAA;AAAA;AAHF;AA/BF;AAFF,QADF;AA0CD;;;;GAxEgCC,MAAMC,S;mBAApB9B,K","file":"2.2.ebd541860b8e591e2e7b.js","sourcesContent":["import {\n  inject, observer\n} from 'mobx-react'\nimport {\n  Button, Form, Input\n} from 'antd'\nconst createForm = Form.create\nconst FormItem = Form.Item\n\n// import './login.less'\n\n@createForm()\n@inject(\"userStore\") @observer\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  handleReset(e) {\n    e.preventDefault()\n    this.props.form.resetFields()\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { userStore, form } = this.props\n\n    form.validateFields((errors, values) => {\n      if (errors) {\n        console.log('Errors in form!!!')\n        return;\n      }\n      userStore.loginServer(values)\n    })\n  }\n  render() {\n    const {\n      getFieldDecorator, getFieldError, isFieldValidating\n    } = this.props.form\n    const formItemLayout = {\n      labelCol: { span: 7 },\n      wrapperCol: { span: 12 },\n    }\n    return(\n      <div\n        className=\"login\">\n        <Form horizontal>\n          <FormItem\n            {...formItemLayout}\n            label=\"User name\"\n            hasFeedback\n            help={isFieldValidating('username') ? 'validating...' : (getFieldError('name') || []).join(', ')}\n          >\n            {getFieldDecorator('username', {\n              rules: [\n                { required: true, min: 5, message: 'User name for at least 5 characters' }\n              ],\n            })(\n              <Input placeholder=\"Realtime validation, try to input Jason Wood\" />\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label=\"Password\"\n            hasFeedback\n          >\n            {getFieldDecorator('password', {\n              rules: [\n                { required: true, whitespace: true, message: 'Please enter your password' }\n              ],\n            })(\n              <Input type=\"password\" autoComplete=\"off\"\n              />\n            )}\n          </FormItem>\n\n          <FormItem wrapperCol={{ span: 12, offset: 7 }}>\n            <Button type=\"primary\" onClick={::this.handleSubmit}>OK</Button>\n            &nbsp;&nbsp;&nbsp;\n            <Button type=\"ghost\" onClick={::this.handleReset}>Reset</Button>\n          </FormItem>\n        </Form>\n      </div>\n      )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/route/login/index.js"],"sourceRoot":""}